{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nimport { fromEvent } from 'file-selector';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\nvar BYTES_PER_MEGABYTE = 1000000;\n\nvar FileSizeValidator = /*#__PURE__*/function () {\n  function FileSizeValidator() {}\n\n  var _proto = FileSizeValidator.prototype;\n\n  _proto.validateBeforeParsing = function validateBeforeParsing(config, plainFiles) {\n    var minFileSize = config.minFileSize,\n        maxFileSize = config.maxFileSize;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(plainFiles), _step; !(_step = _iterator()).done;) {\n      var file = _step.value;\n\n      if (minFileSize || maxFileSize) {\n        return checkFileSize({\n          minFileSize: minFileSize,\n          maxFileSize: maxFileSize,\n          fileSize: file.size\n        });\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.validateAfterParsing = /*#__PURE__*/function () {\n    var _validateAfterParsing = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_config, _file) {\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Promise.resolve());\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function validateAfterParsing(_x, _x2) {\n      return _validateAfterParsing.apply(this, arguments);\n    }\n\n    return validateAfterParsing;\n  }();\n\n  return FileSizeValidator;\n}();\n\nvar checkFileSize = function checkFileSize(_ref) {\n  var fileSize = _ref.fileSize,\n      maxFileSize = _ref.maxFileSize,\n      minFileSize = _ref.minFileSize;\n  return new Promise(function (resolve, reject) {\n    if (minFileSize) {\n      var minBytes = minFileSize * BYTES_PER_MEGABYTE;\n\n      if (fileSize < minBytes) {\n        reject({\n          fileSizeTooSmall: true\n        });\n      }\n    }\n\n    if (maxFileSize) {\n      var maxBytes = maxFileSize * BYTES_PER_MEGABYTE;\n\n      if (fileSize > maxBytes) {\n        reject({\n          fileSizeToolarge: true\n        });\n      }\n    }\n\n    resolve();\n  });\n};\n\nvar FilesLimitValidator = /*#__PURE__*/function () {\n  function FilesLimitValidator() {}\n\n  var _proto = FilesLimitValidator.prototype;\n\n  _proto.validateBeforeParsing = function validateBeforeParsing(config, plainFiles) {\n    var limitFilesConfig = config.limitFilesConfig;\n\n    if (limitFilesConfig) {\n      if (limitFilesConfig.max && plainFiles.length > limitFilesConfig.max) {\n        return Promise.reject({\n          maxLimitExceeded: true\n        });\n      }\n\n      if (limitFilesConfig.min && plainFiles.length < limitFilesConfig.min) {\n        return Promise.reject({\n          minLimitNotReached: true\n        });\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.validateAfterParsing = function validateAfterParsing() {\n    return Promise.resolve();\n  };\n\n  return FilesLimitValidator;\n}();\n\nfunction openFileDialog(accept, multiple, callback) {\n  // this function must be called from a user\n  // activation event (ie an onclick event)\n  // Create an input element\n  var inputElement = document.createElement('input'); // Hide element and append to body (required to run on iOS safari)\n\n  inputElement.style.display = 'none';\n  document.body.appendChild(inputElement); // Set its type to file\n\n  inputElement.type = 'file'; // Set accept to the file types you want the user to select.\n  // Include both the file extension and the mime type\n\n  inputElement.accept = accept; // Accept multiple files\n\n  inputElement.multiple = multiple; // set onchange event to call callback when user has selected file\n  //inputElement.addEventListener('change', callback);\n\n  inputElement.addEventListener('change', function (arg) {\n    callback(arg); // remove element\n\n    document.body.removeChild(inputElement);\n  }); // dispatch a click event to open the file dialog\n\n  inputElement.dispatchEvent(new MouseEvent('click'));\n}\n\nvar ImageDimensionsValidator = /*#__PURE__*/function () {\n  function ImageDimensionsValidator() {}\n\n  var _proto = ImageDimensionsValidator.prototype;\n\n  _proto.validateBeforeParsing = function validateBeforeParsing() {\n    return Promise.resolve();\n  };\n\n  _proto.validateAfterParsing = function validateAfterParsing(config, file, reader) {\n    var readAs = config.readAs,\n        imageSizeRestrictions = config.imageSizeRestrictions;\n\n    if (readAs === 'DataURL' && imageSizeRestrictions && isImage(file.type)) {\n      return checkImageDimensions(reader.result, imageSizeRestrictions);\n    }\n\n    return Promise.resolve();\n  };\n\n  return ImageDimensionsValidator;\n}();\n\nvar isImage = function isImage(fileType) {\n  return fileType.startsWith('image');\n};\n\nvar checkImageDimensions = function checkImageDimensions(imgDataURL, imageSizeRestrictions) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n\n    img.onload = function () {\n      var maxHeight = imageSizeRestrictions.maxHeight,\n          maxWidth = imageSizeRestrictions.maxWidth,\n          minHeight = imageSizeRestrictions.minHeight,\n          minWidth = imageSizeRestrictions.minWidth;\n      var width = this.width,\n          height = this.height;\n      var errors = {};\n      if (maxHeight && maxHeight < height) errors = _extends({}, errors, {\n        imageHeightTooBig: true\n      });\n      if (minHeight && minHeight > height) errors = _extends({}, errors, {\n        imageHeightTooSmall: true\n      });\n      if (maxWidth && maxWidth < width) errors = _extends({}, errors, {\n        imageWidthTooBig: true\n      });\n      if (minWidth && minWidth > width) errors = _extends({}, errors, {\n        imageWidthTooSmall: true\n      });\n      Object.keys(errors).length ? reject(errors) : resolve();\n    };\n\n    img.onerror = function () {\n      reject({\n        imageNotLoaded: true\n      });\n    };\n\n    img.src = imgDataURL;\n  });\n};\n\nvar VALIDATORS = [/*#__PURE__*/new FileSizeValidator(), /*#__PURE__*/new FilesLimitValidator(), /*#__PURE__*/new ImageDimensionsValidator()];\n\nfunction useFilePicker(_ref) {\n  var _ref$accept = _ref.accept,\n      accept = _ref$accept === void 0 ? '*' : _ref$accept,\n      _ref$multiple = _ref.multiple,\n      multiple = _ref$multiple === void 0 ? true : _ref$multiple,\n      _ref$readAs = _ref.readAs,\n      readAs = _ref$readAs === void 0 ? 'Text' : _ref$readAs,\n      minFileSize = _ref.minFileSize,\n      maxFileSize = _ref.maxFileSize,\n      imageSizeRestrictions = _ref.imageSizeRestrictions,\n      limitFilesConfig = _ref.limitFilesConfig,\n      _ref$readFilesContent = _ref.readFilesContent,\n      readFilesContent = _ref$readFilesContent === void 0 ? true : _ref$readFilesContent,\n      _ref$validators = _ref.validators,\n      validators = _ref$validators === void 0 ? [] : _ref$validators;\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useState2 = useState([]),\n      filesContent = _useState2[0],\n      setFilesContent = _useState2[1];\n\n  var _useState3 = useState([]),\n      fileErrors = _useState3[0],\n      setFileErrors = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      plainFiles = _useState5[0],\n      setPlainFiles = _useState5[1];\n\n  var plainFileObjectsRef = useRef([]);\n\n  var openFileSelector = function openFileSelector() {\n    var fileExtensions = accept instanceof Array ? accept.join(',') : accept;\n    openFileDialog(fileExtensions, multiple, function (evt) {\n      clear();\n      var inputElement = evt.target;\n      plainFileObjectsRef.current = inputElement.files ? Array.from(inputElement.files) : [];\n      var validations = VALIDATORS.concat(validators).map(function (validator) {\n        return validator.validateBeforeParsing({\n          accept: accept,\n          multiple: multiple,\n          readAs: readAs,\n          minFileSize: minFileSize,\n          maxFileSize: maxFileSize,\n          imageSizeRestrictions: imageSizeRestrictions,\n          limitFilesConfig: limitFilesConfig,\n          readFilesContent: readFilesContent\n        }, plainFileObjectsRef.current)[\"catch\"](function (err) {\n          return Promise.reject(setFileErrors(function (f) {\n            return [_extends({}, err, f)];\n          }));\n        });\n      });\n      Promise.all(validations).then(function () {\n        if (!readFilesContent) {\n          setPlainFiles(plainFileObjectsRef.current);\n          return;\n        }\n\n        fromEvent(evt).then(function (files) {\n          setFiles(files);\n        });\n      })[\"catch\"](function () {});\n    });\n  };\n\n  var clear = function clear() {\n    setPlainFiles([]);\n    setFiles([]);\n    setFilesContent([]);\n    setFileErrors([]);\n  };\n\n  useEffect(function () {\n    if (files.length === 0) {\n      setFilesContent([]);\n      return;\n    }\n\n    setLoading(true);\n    var fileParsingPromises = files.map(function (file) {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(resolve, reject) {\n          var reader, readStrategy, addError;\n          return runtime_1.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  reader = new FileReader(); //availible reader methods: readAsText, readAsBinaryString, readAsArrayBuffer, readAsDataURL\n\n                  readStrategy = reader[\"readAs\" + readAs];\n                  readStrategy.call(reader, file);\n\n                  addError = function addError(_ref3) {\n                    var _ref3$name = _ref3.name,\n                        name = _ref3$name === void 0 ? file.name : _ref3$name,\n                        others = _objectWithoutPropertiesLoose(_ref3, [\"name\"]);\n\n                    reject(_extends({\n                      name: name,\n                      fileSizeToolarge: false,\n                      fileSizeTooSmall: false\n                    }, others));\n                  };\n\n                  reader.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n                    var validations;\n                    return runtime_1.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            validations = VALIDATORS.concat(validators).map(function (validator) {\n                              return validator.validateAfterParsing({\n                                accept: accept,\n                                multiple: multiple,\n                                readAs: readAs,\n                                minFileSize: minFileSize,\n                                maxFileSize: maxFileSize,\n                                imageSizeRestrictions: imageSizeRestrictions,\n                                limitFilesConfig: limitFilesConfig,\n                                readFilesContent: readFilesContent\n                              }, file, reader)[\"catch\"](function (err) {\n                                return Promise.reject(addError(err));\n                              });\n                            });\n                            Promise.all(validations).then(function () {\n                              return resolve({\n                                content: reader.result,\n                                name: file.name,\n                                lastModified: file.lastModified\n                              });\n                            })[\"catch\"](function () {});\n\n                          case 2:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  reader.onerror = function () {\n                    addError({\n                      readerError: reader.error\n                    });\n                  };\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n    Promise.all(fileParsingPromises).then(function (fileContent) {\n      setFilesContent(fileContent);\n      setPlainFiles(plainFileObjectsRef.current);\n      setFileErrors([]);\n    })[\"catch\"](function (err) {\n      setFileErrors(function (f) {\n        return [err].concat(f);\n      });\n    })[\"finally\"](function () {\n      return setLoading(false);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n  return [openFileSelector, {\n    filesContent: filesContent,\n    errors: fileErrors,\n    loading: loading,\n    plainFiles: plainFiles,\n    clear: clear\n  }];\n}\n\nexport { useFilePicker };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIA,OAAO,GAAI,UAAUC,OAAV,EAAmB;AAGhC,QAAIC,EAAE,GAAGC,MAAM,CAACC,SAAhB;AACA,QAAIC,MAAM,GAAGH,EAAE,CAACI,cAAhB;AACA,QAAIC,WAAJ,CALgC,CAKlB;;AACd,QAAIC,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,GAA+BA,MAA/B,GAAwC,EAAtD;AACA,QAAIC,cAAc,GAAGF,OAAO,CAACG,QAAR,IAAoB,YAAzC;AACA,QAAIC,mBAAmB,GAAGJ,OAAO,CAACK,aAAR,IAAyB,iBAAnD;AACA,QAAIC,iBAAiB,GAAGN,OAAO,CAACO,WAAR,IAAuB,eAA/C;;AAEA,aAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/BhB,YAAM,CAACiB,cAAP,CAAsBH,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9BC,aAAK,EAAEA,KADuB;AAE9BE,kBAAU,EAAE,IAFkB;AAG9BC,oBAAY,EAAE,IAHgB;AAI9BC,gBAAQ,EAAE;AAJoB,OAAhC;AAMA,aAAON,GAAG,CAACC,GAAD,CAAV;AACD;;AACD,QAAI;AACN;AACIF,YAAM,CAAC,EAAD,EAAK,EAAL,CAAN;AACD,KAHD,CAGE,OAAOQ,GAAP,EAAY;AACZR,YAAM,GAAG,UAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0B;AACjC,eAAOF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAlB;AACD,OAFD;AAGD;;AAED,aAASM,IAAT,CAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,WAAtC,EAAmD;AACrD;AACI,UAAIC,cAAc,GAAGH,OAAO,IAAIA,OAAO,CAACvB,SAAR,YAA6B2B,SAAxC,GAAoDJ,OAApD,GAA8DI,SAAnF;AACA,UAAIC,SAAS,GAAG7B,MAAM,CAAC8B,MAAP,CAAcH,cAAc,CAAC1B,SAA7B,CAAhB;AACA,UAAI8B,OAAO,GAAG,IAAIC,OAAJ,CAAYN,WAAW,IAAI,EAA3B,CAAd,CAJiD,CAMrD;AACA;;AACIG,eAAS,CAACI,OAAV,GAAoBC,gBAAgB,CAACX,OAAD,EAAUE,IAAV,EAAgBM,OAAhB,CAApC;AAEA,aAAOF,SAAP;AACD;;AACD/B,WAAO,CAACwB,IAAR,GAAeA,IAAf,CAzCgC,CA2ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,aAASa,QAAT,CAAkBC,EAAlB,EAAsBtB,GAAtB,EAA2BuB,GAA3B,EAAgC;AAC9B,UAAI;AACF,eAAO;AAAEC,cAAI,EAAE,QAAR;AAAkBD,aAAG,EAAED,EAAE,CAACG,IAAH,CAAQzB,GAAR,EAAauB,GAAb;AAAvB,SAAP;AACD,OAFD,CAEE,OAAOhB,GAAP,EAAY;AACZ,eAAO;AAAEiB,cAAI,EAAE,OAAR;AAAiBD,aAAG,EAAEhB;AAAtB,SAAP;AACD;AACF;;AAED,QAAImB,sBAAsB,GAAG,gBAA7B;AACA,QAAIC,sBAAsB,GAAG,gBAA7B;AACA,QAAIC,iBAAiB,GAAG,WAAxB;AACA,QAAIC,iBAAiB,GAAG,WAAxB,CAhEgC,CAkElC;AACA;;AACE,QAAIC,gBAAgB,GAAG,EAAvB,CApEgC,CAsElC;AACA;AACA;AACA;;AACE,aAAShB,SAAT,GAAqB,CAAE;;AACvB,aAASiB,iBAAT,GAA6B,CAAE;;AAC/B,aAASC,0BAAT,GAAsC,CAAE,CA5ER,CA8ElC;AACA;;;AACE,QAAIC,iBAAiB,GAAG,EAAxB;;AACAA,qBAAiB,CAACxC,cAAD,CAAjB,GAAoC,YAAY;AAC9C,aAAO,IAAP;AACD,KAFD;;AAIA,QAAIyC,QAAQ,GAAGhD,MAAM,CAACiD,cAAtB;AACA,QAAIC,uBAAuB,GAAGF,QAAQ,IAAIA,QAAQ,CAACA,QAAQ,CAACG,MAAM,CAAC,EAAD,CAAP,CAAT,CAAlD;;AACA,QAAID,uBAAuB,IACvBA,uBAAuB,KAAKnD,EAD5B,IAEAG,MAAM,CAACqC,IAAP,CAAYW,uBAAZ,EAAqC3C,cAArC,CAFJ,EAE0D;AAC5D;AACA;AACIwC,uBAAiB,GAAGG,uBAApB;AACD;;AAED,QAAIE,EAAE,GAAGN,0BAA0B,CAAC7C,SAA3B,GACP2B,SAAS,CAAC3B,SAAV,GAAsBD,MAAM,CAAC8B,MAAP,CAAciB,iBAAd,CADxB;AAEAF,qBAAiB,CAAC5C,SAAlB,GAA8BmD,EAAE,CAACC,WAAH,GAAiBP,0BAA/C;AACAA,8BAA0B,CAACO,WAA3B,GAAyCR,iBAAzC;AACAA,qBAAiB,CAACS,WAAlB,GAAgCzC,MAAM,CACpCiC,0BADoC,EAEpCnC,iBAFoC,EAGpC,mBAHoC,CAAtC,CAnGgC,CAyGlC;AACA;;AACE,aAAS4C,qBAAT,CAA+BtD,SAA/B,EAA0C;AACxC,OAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4BuD,OAA5B,CAAoC,UAASC,MAAT,EAAiB;AACnD5C,cAAM,CAACZ,SAAD,EAAYwD,MAAZ,EAAoB,UAASpB,GAAT,EAAc;AACtC,iBAAO,KAAKJ,OAAL,CAAawB,MAAb,EAAqBpB,GAArB,CAAP;AACD,SAFK,CAAN;AAGD,OAJD;AAKD;;AAEDvC,WAAO,CAAC4D,mBAAR,GAA8B,UAASC,MAAT,EAAiB;AAC7C,UAAIC,IAAI,GAAG,OAAOD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACN,WAAlD;AACA,aAAOO,IAAI,GACPA,IAAI,KAAKf,iBAAT,IACR;AACA;AACQ,OAACe,IAAI,CAACN,WAAL,IAAoBM,IAAI,CAACC,IAA1B,MAAoC,mBAJ7B,GAKP,KALJ;AAMD,KARD;;AAUA/D,WAAO,CAACgE,IAAR,GAAe,UAASH,MAAT,EAAiB;AAC9B,UAAI3D,MAAM,CAAC+D,cAAX,EAA2B;AACzB/D,cAAM,CAAC+D,cAAP,CAAsBJ,MAAtB,EAA8Bb,0BAA9B;AACD,OAFD,MAEO;AACLa,cAAM,CAACK,SAAP,GAAmBlB,0BAAnB;AACAjC,cAAM,CAAC8C,MAAD,EAAShD,iBAAT,EAA4B,mBAA5B,CAAN;AACD;;AACDgD,YAAM,CAAC1D,SAAP,GAAmBD,MAAM,CAAC8B,MAAP,CAAcsB,EAAd,CAAnB;AACA,aAAOO,MAAP;AACD,KATD,CA7HgC,CAwIlC;AACA;AACA;AACA;;;AACE7D,WAAO,CAACmE,KAAR,GAAgB,UAAS5B,GAAT,EAAc;AAC5B,aAAO;AAAE6B,eAAO,EAAE7B;AAAX,OAAP;AACD,KAFD;;AAIA,aAAS8B,aAAT,CAAuBtC,SAAvB,EAAkCuC,WAAlC,EAA+C;AAC7C,eAASC,MAAT,CAAgBZ,MAAhB,EAAwBpB,GAAxB,EAA6BiC,OAA7B,EAAsCC,MAAtC,EAA8C;AAC5C,YAAIC,MAAM,GAAGrC,QAAQ,CAACN,SAAS,CAAC4B,MAAD,CAAV,EAAoB5B,SAApB,EAA+BQ,GAA/B,CAArB;;AACA,YAAImC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3BiC,gBAAM,CAACC,MAAM,CAACnC,GAAR,CAAN;AACD,SAFD,MAEO;AACL,cAAIoC,MAAM,GAAGD,MAAM,CAACnC,GAApB;AACA,cAAIrB,KAAK,GAAGyD,MAAM,CAACzD,KAAnB;;AACA,cAAIA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEAd,MAAM,CAACqC,IAAP,CAAYvB,KAAZ,EAAmB,SAAnB,CAFJ,EAEmC;AACjC,mBAAOoD,WAAW,CAACE,OAAZ,CAAoBtD,KAAK,CAACkD,OAA1B,EAAmCQ,IAAnC,CAAwC,UAAS1D,KAAT,EAAgB;AAC7DqD,oBAAM,CAAC,MAAD,EAASrD,KAAT,EAAgBsD,OAAhB,EAAyBC,MAAzB,CAAN;AACD,aAFM,EAEJ,UAASlD,GAAT,EAAc;AACfgD,oBAAM,CAAC,OAAD,EAAUhD,GAAV,EAAeiD,OAAf,EAAwBC,MAAxB,CAAN;AACD,aAJM,CAAP;AAKD;;AAED,iBAAOH,WAAW,CAACE,OAAZ,CAAoBtD,KAApB,EAA2B0D,IAA3B,CAAgC,UAASC,SAAT,EAAoB;AACnE;AACA;AACA;AACUF,kBAAM,CAACzD,KAAP,GAAe2D,SAAf;AACAL,mBAAO,CAACG,MAAD,CAAP;AACD,WANM,EAMJ,UAASG,KAAT,EAAgB;AAC3B;AACA;AACU,mBAAOP,MAAM,CAAC,OAAD,EAAUO,KAAV,EAAiBN,OAAjB,EAA0BC,MAA1B,CAAb;AACD,WAVM,CAAP;AAWD;AACF;;AAED,UAAIM,eAAJ;;AAEA,eAASC,OAAT,CAAiBrB,MAAjB,EAAyBpB,GAAzB,EAA8B;AAC5B,iBAAS0C,0BAAT,GAAsC;AACpC,iBAAO,IAAIX,WAAJ,CAAgB,UAASE,OAAT,EAAkBC,MAAlB,EAA0B;AAC/CF,kBAAM,CAACZ,MAAD,EAASpB,GAAT,EAAciC,OAAd,EAAuBC,MAAvB,CAAN;AACD,WAFM,CAAP;AAGD;;AAED,eAAOM,eAAe,GAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQA,uBAAe,GAAGA,eAAe,CAACH,IAAhB,CAChBK,0BADgB,EAE1B;AACA;AACUA,kCAJgB,CAAH,GAKXA,0BAA0B,EAlBhC;AAmBD,OA5D4C,CA8DjD;AACA;;;AACI,WAAK9C,OAAL,GAAe6C,OAAf;AACD;;AAEDvB,yBAAqB,CAACY,aAAa,CAAClE,SAAf,CAArB;;AACAkE,iBAAa,CAAClE,SAAd,CAAwBQ,mBAAxB,IAA+C,YAAY;AACzD,aAAO,IAAP;AACD,KAFD;;AAGAX,WAAO,CAACqE,aAAR,GAAwBA,aAAxB,CAvNgC,CAyNlC;AACA;AACA;;AACErE,WAAO,CAACkF,KAAR,GAAgB,UAASzD,OAAT,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,WAAjC,EAA8C0C,WAA9C,EAA2D;AACzE,UAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4BA,WAAW,GAAGa,OAAd;AAE5B,UAAIC,IAAI,GAAG,IAAIf,aAAJ,CACT7C,IAAI,CAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,WAAzB,CADK,EAET0C,WAFS,CAAX;AAKA,aAAOtE,OAAO,CAAC4D,mBAAR,CAA4BlC,OAA5B,IACH0D,IADG,CACC;AADD,QAEHA,IAAI,CAACC,IAAL,GAAYT,IAAZ,CAAiB,UAASD,MAAT,EAAiB;AAChC,eAAOA,MAAM,CAACW,IAAP,GAAcX,MAAM,CAACzD,KAArB,GAA6BkE,IAAI,CAACC,IAAL,EAApC;AACD,OAFD,CAFJ;AAKD,KAbD;;AAeA,aAASjD,gBAAT,CAA0BX,OAA1B,EAAmCE,IAAnC,EAAyCM,OAAzC,EAAkD;AAChD,UAAIsD,KAAK,GAAG7C,sBAAZ;AAEA,aAAO,SAAS6B,MAAT,CAAgBZ,MAAhB,EAAwBpB,GAAxB,EAA6B;AAClC,YAAIgD,KAAK,KAAK3C,iBAAd,EAAiC;AAC/B,gBAAM,IAAI4C,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,YAAID,KAAK,KAAK1C,iBAAd,EAAiC;AAC/B,cAAIc,MAAM,KAAK,OAAf,EAAwB;AACtB,kBAAMpB,GAAN;AACD,WAH8B,CAKvC;AACA;;;AACQ,iBAAOkD,UAAU,EAAjB;AACD;;AAEDxD,eAAO,CAAC0B,MAAR,GAAiBA,MAAjB;AACA1B,eAAO,CAACM,GAAR,GAAcA,GAAd;;AAEA,eAAO,IAAP,EAAa;AACX,cAAImD,QAAQ,GAAGzD,OAAO,CAACyD,QAAvB;;AACA,cAAIA,QAAJ,EAAc;AACZ,gBAAIC,cAAc,GAAGC,mBAAmB,CAACF,QAAD,EAAWzD,OAAX,CAAxC;;AACA,gBAAI0D,cAAJ,EAAoB;AAClB,kBAAIA,cAAc,KAAK7C,gBAAvB,EAAyC;AACzC,qBAAO6C,cAAP;AACD;AACF;;AAED,cAAI1D,OAAO,CAAC0B,MAAR,KAAmB,MAAvB,EAA+B;AACvC;AACA;AACU1B,mBAAO,CAAC4D,IAAR,GAAe5D,OAAO,CAAC6D,KAAR,GAAgB7D,OAAO,CAACM,GAAvC;AAED,WALD,MAKO,IAAIN,OAAO,CAAC0B,MAAR,KAAmB,OAAvB,EAAgC;AACrC,gBAAI4B,KAAK,KAAK7C,sBAAd,EAAsC;AACpC6C,mBAAK,GAAG1C,iBAAR;AACA,oBAAMZ,OAAO,CAACM,GAAd;AACD;;AAEDN,mBAAO,CAAC8D,iBAAR,CAA0B9D,OAAO,CAACM,GAAlC;AAED,WARM,MAQA,IAAIN,OAAO,CAAC0B,MAAR,KAAmB,QAAvB,EAAiC;AACtC1B,mBAAO,CAAC+D,MAAR,CAAe,QAAf,EAAyB/D,OAAO,CAACM,GAAjC;AACD;;AAEDgD,eAAK,GAAG3C,iBAAR;AAEA,cAAI8B,MAAM,GAAGrC,QAAQ,CAACZ,OAAD,EAAUE,IAAV,EAAgBM,OAAhB,CAArB;;AACA,cAAIyC,MAAM,CAAClC,IAAP,KAAgB,QAApB,EAA8B;AACtC;AACA;AACU+C,iBAAK,GAAGtD,OAAO,CAACqD,IAAR,GACJzC,iBADI,GAEJF,sBAFJ;;AAIA,gBAAI+B,MAAM,CAACnC,GAAP,KAAeO,gBAAnB,EAAqC;AACnC;AACD;;AAED,mBAAO;AACL5B,mBAAK,EAAEwD,MAAM,CAACnC,GADT;AAEL+C,kBAAI,EAAErD,OAAO,CAACqD;AAFT,aAAP;AAKD,WAhBD,MAgBO,IAAIZ,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAClC+C,iBAAK,GAAG1C,iBAAR,CADkC,CAE5C;AACA;;AACUZ,mBAAO,CAAC0B,MAAR,GAAiB,OAAjB;AACA1B,mBAAO,CAACM,GAAR,GAAcmC,MAAM,CAACnC,GAArB;AACD;AACF;AACF,OAxED;AAyED,KAvT+B,CAyTlC;AACA;AACA;AACA;;;AACE,aAASqD,mBAAT,CAA6BF,QAA7B,EAAuCzD,OAAvC,EAAgD;AAC9C,UAAI0B,MAAM,GAAG+B,QAAQ,CAAChF,QAAT,CAAkBuB,OAAO,CAAC0B,MAA1B,CAAb;;AACA,UAAIA,MAAM,KAAKrD,WAAf,EAA0B;AAC9B;AACA;AACM2B,eAAO,CAACyD,QAAR,GAAmB,IAAnB;;AAEA,YAAIzD,OAAO,CAAC0B,MAAR,KAAmB,OAAvB,EAAgC;AACtC;AACQ,cAAI+B,QAAQ,CAAChF,QAAT,CAAkB,QAAlB,CAAJ,EAAiC;AACzC;AACA;AACUuB,mBAAO,CAAC0B,MAAR,GAAiB,QAAjB;AACA1B,mBAAO,CAACM,GAAR,GAAcjC,WAAd;AACAsF,+BAAmB,CAACF,QAAD,EAAWzD,OAAX,CAAnB;;AAEA,gBAAIA,OAAO,CAAC0B,MAAR,KAAmB,OAAvB,EAAgC;AAC1C;AACA;AACY,qBAAOb,gBAAP;AACD;AACF;;AAEDb,iBAAO,CAAC0B,MAAR,GAAiB,OAAjB;AACA1B,iBAAO,CAACM,GAAR,GAAc,IAAI0D,SAAJ,CACZ,gDADY,CAAd;AAED;;AAED,eAAOnD,gBAAP;AACD;;AAED,UAAI4B,MAAM,GAAGrC,QAAQ,CAACsB,MAAD,EAAS+B,QAAQ,CAAChF,QAAlB,EAA4BuB,OAAO,CAACM,GAApC,CAArB;;AAEA,UAAImC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3BP,eAAO,CAAC0B,MAAR,GAAiB,OAAjB;AACA1B,eAAO,CAACM,GAAR,GAAcmC,MAAM,CAACnC,GAArB;AACAN,eAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,eAAO5C,gBAAP;AACD;;AAED,UAAIoD,IAAI,GAAGxB,MAAM,CAACnC,GAAlB;;AAEA,UAAI,CAAE2D,IAAN,EAAY;AACVjE,eAAO,CAAC0B,MAAR,GAAiB,OAAjB;AACA1B,eAAO,CAACM,GAAR,GAAc,IAAI0D,SAAJ,CAAc,kCAAd,CAAd;AACAhE,eAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,eAAO5C,gBAAP;AACD;;AAED,UAAIoD,IAAI,CAACZ,IAAT,EAAe;AACnB;AACA;AACMrD,eAAO,CAACyD,QAAQ,CAACS,UAAV,CAAP,GAA+BD,IAAI,CAAChF,KAApC,CAHa,CAKnB;;AACMe,eAAO,CAACoD,IAAR,GAAeK,QAAQ,CAACU,OAAxB,CANa,CAQnB;AACA;AACA;AACA;AACA;AACA;;AACM,YAAInE,OAAO,CAAC0B,MAAR,KAAmB,QAAvB,EAAiC;AAC/B1B,iBAAO,CAAC0B,MAAR,GAAiB,MAAjB;AACA1B,iBAAO,CAACM,GAAR,GAAcjC,WAAd;AACD;AAEF,OAnBD,MAmBO;AACX;AACM,eAAO4F,IAAP;AACD,OAvE6C,CAyElD;AACA;;;AACIjE,aAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,aAAO5C,gBAAP;AACD,KA1Y+B,CA4YlC;AACA;;;AACEW,yBAAqB,CAACH,EAAD,CAArB;AAEAvC,UAAM,CAACuC,EAAD,EAAKzC,iBAAL,EAAwB,WAAxB,CAAN,CAhZgC,CAkZlC;AACA;AACA;AACA;AACA;;AACEyC,MAAE,CAAC7C,cAAD,CAAF,GAAqB,YAAW;AAC9B,aAAO,IAAP;AACD,KAFD;;AAIA6C,MAAE,CAAC+C,QAAH,GAAc,YAAW;AACvB,aAAO,oBAAP;AACD,KAFD;;AAIA,aAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,UAAIC,KAAK,GAAG;AAAEC,cAAM,EAAEF,IAAI,CAAC,CAAD;AAAd,OAAZ;;AAEA,UAAI,KAAKA,IAAT,EAAe;AACbC,aAAK,CAACE,QAAN,GAAiBH,IAAI,CAAC,CAAD,CAArB;AACD;;AAED,UAAI,KAAKA,IAAT,EAAe;AACbC,aAAK,CAACG,UAAN,GAAmBJ,IAAI,CAAC,CAAD,CAAvB;AACAC,aAAK,CAACI,QAAN,GAAiBL,IAAI,CAAC,CAAD,CAArB;AACD;;AAED,WAAKM,UAAL,CAAgBC,IAAhB,CAAqBN,KAArB;AACD;;AAED,aAASO,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,UAAI9B,MAAM,GAAG8B,KAAK,CAACQ,UAAN,IAAoB,EAAjC;AACAtC,YAAM,CAAClC,IAAP,GAAc,QAAd;AACA,aAAOkC,MAAM,CAACnC,GAAd;AACAiE,WAAK,CAACQ,UAAN,GAAmBtC,MAAnB;AACD;;AAED,aAASxC,OAAT,CAAiBN,WAAjB,EAA8B;AAChC;AACA;AACA;AACI,WAAKiF,UAAL,GAAkB,CAAC;AAAEJ,cAAM,EAAE;AAAV,OAAD,CAAlB;AACA7E,iBAAW,CAAC8B,OAAZ,CAAoB4C,YAApB,EAAkC,IAAlC;AACA,WAAKW,KAAL,CAAW,IAAX;AACD;;AAEDjH,WAAO,CAACkH,IAAR,GAAe,UAASC,MAAT,EAAiB;AAC9B,UAAID,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIjG,GAAT,IAAgBkG,MAAhB,EAAwB;AACtBD,YAAI,CAACJ,IAAL,CAAU7F,GAAV;AACD;;AACDiG,UAAI,CAACE,OAAL,GAL8B,CAOlC;AACA;;AACI,aAAO,SAAS/B,IAAT,GAAgB;AACrB,eAAO6B,IAAI,CAACG,MAAZ,EAAoB;AAClB,cAAIpG,GAAG,GAAGiG,IAAI,CAACI,GAAL,EAAV;;AACA,cAAIrG,GAAG,IAAIkG,MAAX,EAAmB;AACjB9B,gBAAI,CAACnE,KAAL,GAAaD,GAAb;AACAoE,gBAAI,CAACC,IAAL,GAAY,KAAZ;AACA,mBAAOD,IAAP;AACD;AACF,SARoB,CAU3B;AACA;AACA;;;AACMA,YAAI,CAACC,IAAL,GAAY,IAAZ;AACA,eAAOD,IAAP;AACD,OAfD;AAgBD,KAzBD;;AA2BA,aAAShC,MAAT,CAAgBkE,QAAhB,EAA0B;AACxB,UAAIA,QAAJ,EAAc;AACZ,YAAIC,cAAc,GAAGD,QAAQ,CAAC9G,cAAD,CAA7B;;AACA,YAAI+G,cAAJ,EAAoB;AAClB,iBAAOA,cAAc,CAAC/E,IAAf,CAAoB8E,QAApB,CAAP;AACD;;AAED,YAAI,OAAOA,QAAQ,CAAClC,IAAhB,KAAyB,UAA7B,EAAyC;AACvC,iBAAOkC,QAAP;AACD;;AAED,YAAI,CAACE,KAAK,CAACF,QAAQ,CAACF,MAAV,CAAV,EAA6B;AAC3B,cAAIK,CAAC,GAAG,CAAC,CAAT;AAAA,cAAYrC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACjC,mBAAO,EAAEqC,CAAF,GAAMH,QAAQ,CAACF,MAAtB,EAA8B;AAC5B,kBAAIjH,MAAM,CAACqC,IAAP,CAAY8E,QAAZ,EAAsBG,CAAtB,CAAJ,EAA8B;AAC5BrC,oBAAI,CAACnE,KAAL,GAAaqG,QAAQ,CAACG,CAAD,CAArB;AACArC,oBAAI,CAACC,IAAL,GAAY,KAAZ;AACA,uBAAOD,IAAP;AACD;AACF;;AAEDA,gBAAI,CAACnE,KAAL,GAAaZ,WAAb;AACA+E,gBAAI,CAACC,IAAL,GAAY,IAAZ;AAEA,mBAAOD,IAAP;AACD,WAbD;;AAeA,iBAAOA,IAAI,CAACA,IAAL,GAAYA,IAAnB;AACD;AACF,OA7BuB,CA+B5B;;;AACI,aAAO;AAAEA,YAAI,EAAEI;AAAR,OAAP;AACD;;AACDzF,WAAO,CAACqD,MAAR,GAAiBA,MAAjB;;AAEA,aAASoC,UAAT,GAAsB;AACpB,aAAO;AAAEvE,aAAK,EAAEZ,WAAT;AAAoBgF,YAAI,EAAE;AAA1B,OAAP;AACD;;AAEDpD,WAAO,CAAC/B,SAAR,GAAoB;AAClBoD,iBAAW,EAAErB,OADK;AAGlB+E,WAAK,EAAE,UAASU,aAAT,EAAwB;AAC7B,aAAKC,IAAL,GAAY,CAAZ;AACA,aAAKvC,IAAL,GAAY,CAAZ,CAF6B,CAGnC;AACA;;AACM,aAAKQ,IAAL,GAAY,KAAKC,KAAL,GAAaxF,WAAzB;AACA,aAAKgF,IAAL,GAAY,KAAZ;AACA,aAAKI,QAAL,GAAgB,IAAhB;AAEA,aAAK/B,MAAL,GAAc,MAAd;AACA,aAAKpB,GAAL,GAAWjC,WAAX;AAEA,aAAKuG,UAAL,CAAgBnD,OAAhB,CAAwBqD,aAAxB;;AAEA,YAAI,CAACY,aAAL,EAAoB;AAClB,eAAK,IAAI5D,IAAT,IAAiB,IAAjB,EAAuB;AAC/B;AACU,gBAAIA,IAAI,CAAC8D,MAAL,CAAY,CAAZ,MAAmB,GAAnB,IACAzH,MAAM,CAACqC,IAAP,CAAY,IAAZ,EAAkBsB,IAAlB,CADA,IAEA,CAAC0D,KAAK,CAAC,CAAC1D,IAAI,CAAC+D,KAAL,CAAW,CAAX,CAAF,CAFV,EAE4B;AAC1B,mBAAK/D,IAAL,IAAazD,WAAb;AACD;AACF;AACF;AACF,OA3BiB;AA6BlByH,UAAI,EAAE,YAAW;AACf,aAAKzC,IAAL,GAAY,IAAZ;AAEA,YAAI0C,SAAS,GAAG,KAAKnB,UAAL,CAAgB,CAAhB,CAAhB;AACA,YAAIoB,UAAU,GAAGD,SAAS,CAAChB,UAA3B;;AACA,YAAIiB,UAAU,CAACzF,IAAX,KAAoB,OAAxB,EAAiC;AAC/B,gBAAMyF,UAAU,CAAC1F,GAAjB;AACD;;AAED,eAAO,KAAK2F,IAAZ;AACD,OAvCiB;AAyClBnC,uBAAiB,EAAE,UAASoC,SAAT,EAAoB;AACrC,YAAI,KAAK7C,IAAT,EAAe;AACb,gBAAM6C,SAAN;AACD;;AAED,YAAIlG,OAAO,GAAG,IAAd;;AACA,iBAASmG,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B5D,gBAAM,CAAClC,IAAP,GAAc,OAAd;AACAkC,gBAAM,CAACnC,GAAP,GAAa4F,SAAb;AACAlG,iBAAO,CAACoD,IAAR,GAAegD,GAAf;;AAEA,cAAIC,MAAJ,EAAY;AACpB;AACA;AACUrG,mBAAO,CAAC0B,MAAR,GAAiB,MAAjB;AACA1B,mBAAO,CAACM,GAAR,GAAcjC,WAAd;AACD;;AAED,iBAAO,CAAC,CAAEgI,MAAV;AACD;;AAED,aAAK,IAAIZ,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,cAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;AACA,cAAIhD,MAAM,GAAG8B,KAAK,CAACQ,UAAnB;;AAEA,cAAIR,KAAK,CAACC,MAAN,KAAiB,MAArB,EAA6B;AACrC;AACA;AACA;AACU,mBAAO2B,MAAM,CAAC,KAAD,CAAb;AACD;;AAED,cAAI5B,KAAK,CAACC,MAAN,IAAgB,KAAKmB,IAAzB,EAA+B;AAC7B,gBAAIW,QAAQ,GAAGnI,MAAM,CAACqC,IAAP,CAAY+D,KAAZ,EAAmB,UAAnB,CAAf;AACA,gBAAIgC,UAAU,GAAGpI,MAAM,CAACqC,IAAP,CAAY+D,KAAZ,EAAmB,YAAnB,CAAjB;;AAEA,gBAAI+B,QAAQ,IAAIC,UAAhB,EAA4B;AAC1B,kBAAI,KAAKZ,IAAL,GAAYpB,KAAK,CAACE,QAAtB,EAAgC;AAC9B,uBAAO0B,MAAM,CAAC5B,KAAK,CAACE,QAAP,EAAiB,IAAjB,CAAb;AACD,eAFD,MAEO,IAAI,KAAKkB,IAAL,GAAYpB,KAAK,CAACG,UAAtB,EAAkC;AACvC,uBAAOyB,MAAM,CAAC5B,KAAK,CAACG,UAAP,CAAb;AACD;AAEF,aAPD,MAOO,IAAI4B,QAAJ,EAAc;AACnB,kBAAI,KAAKX,IAAL,GAAYpB,KAAK,CAACE,QAAtB,EAAgC;AAC9B,uBAAO0B,MAAM,CAAC5B,KAAK,CAACE,QAAP,EAAiB,IAAjB,CAAb;AACD;AAEF,aALM,MAKA,IAAI8B,UAAJ,EAAgB;AACrB,kBAAI,KAAKZ,IAAL,GAAYpB,KAAK,CAACG,UAAtB,EAAkC;AAChC,uBAAOyB,MAAM,CAAC5B,KAAK,CAACG,UAAP,CAAb;AACD;AAEF,aALM,MAKA;AACL,oBAAM,IAAInB,KAAJ,CAAU,wCAAV,CAAN;AACD;AACF;AACF;AACF,OAnGiB;AAqGlBQ,YAAM,EAAE,UAASxD,IAAT,EAAeD,GAAf,EAAoB;AAC1B,aAAK,IAAImF,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,cAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,cAAIlB,KAAK,CAACC,MAAN,IAAgB,KAAKmB,IAArB,IACAxH,MAAM,CAACqC,IAAP,CAAY+D,KAAZ,EAAmB,YAAnB,CADA,IAEA,KAAKoB,IAAL,GAAYpB,KAAK,CAACG,UAFtB,EAEkC;AAChC,gBAAI8B,YAAY,GAAGjC,KAAnB;AACA;AACD;AACF;;AAED,YAAIiC,YAAY,KACXjG,IAAI,KAAK,OAAT,IACAA,IAAI,KAAK,UAFE,CAAZ,IAGAiG,YAAY,CAAChC,MAAb,IAAuBlE,GAHvB,IAIAA,GAAG,IAAIkG,YAAY,CAAC9B,UAJxB,EAIoC;AAC1C;AACA;AACQ8B,sBAAY,GAAG,IAAf;AACD;;AAED,YAAI/D,MAAM,GAAG+D,YAAY,GAAGA,YAAY,CAACzB,UAAhB,GAA6B,EAAtD;AACAtC,cAAM,CAAClC,IAAP,GAAcA,IAAd;AACAkC,cAAM,CAACnC,GAAP,GAAaA,GAAb;;AAEA,YAAIkG,YAAJ,EAAkB;AAChB,eAAK9E,MAAL,GAAc,MAAd;AACA,eAAK0B,IAAL,GAAYoD,YAAY,CAAC9B,UAAzB;AACA,iBAAO7D,gBAAP;AACD;;AAED,eAAO,KAAK4F,QAAL,CAAchE,MAAd,CAAP;AACD,OArIiB;AAuIlBgE,cAAQ,EAAE,UAAShE,MAAT,EAAiBkC,QAAjB,EAA2B;AACnC,YAAIlC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,gBAAMkC,MAAM,CAACnC,GAAb;AACD;;AAED,YAAImC,MAAM,CAAClC,IAAP,KAAgB,OAAhB,IACAkC,MAAM,CAAClC,IAAP,KAAgB,UADpB,EACgC;AAC9B,eAAK6C,IAAL,GAAYX,MAAM,CAACnC,GAAnB;AACD,SAHD,MAGO,IAAImC,MAAM,CAAClC,IAAP,KAAgB,QAApB,EAA8B;AACnC,eAAK0F,IAAL,GAAY,KAAK3F,GAAL,GAAWmC,MAAM,CAACnC,GAA9B;AACA,eAAKoB,MAAL,GAAc,QAAd;AACA,eAAK0B,IAAL,GAAY,KAAZ;AACD,SAJM,MAIA,IAAIX,MAAM,CAAClC,IAAP,KAAgB,QAAhB,IAA4BoE,QAAhC,EAA0C;AAC/C,eAAKvB,IAAL,GAAYuB,QAAZ;AACD;;AAED,eAAO9D,gBAAP;AACD,OAxJiB;AA0JlB6F,YAAM,EAAE,UAAShC,UAAT,EAAqB;AAC3B,aAAK,IAAIe,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,cAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,cAAIlB,KAAK,CAACG,UAAN,KAAqBA,UAAzB,EAAqC;AACnC,iBAAK+B,QAAL,CAAclC,KAAK,CAACQ,UAApB,EAAgCR,KAAK,CAACI,QAAtC;AACAG,yBAAa,CAACP,KAAD,CAAb;AACA,mBAAO1D,gBAAP;AACD;AACF;AACF,OAnKiB;AAqKlB,eAAS,UAAS2D,MAAT,EAAiB;AACxB,aAAK,IAAIiB,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,cAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,cAAIlB,KAAK,CAACC,MAAN,KAAiBA,MAArB,EAA6B;AAC3B,gBAAI/B,MAAM,GAAG8B,KAAK,CAACQ,UAAnB;;AACA,gBAAItC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,kBAAIoG,MAAM,GAAGlE,MAAM,CAACnC,GAApB;AACAwE,2BAAa,CAACP,KAAD,CAAb;AACD;;AACD,mBAAOoC,MAAP;AACD;AACF,SAXuB,CAa9B;AACA;;;AACM,cAAM,IAAIpD,KAAJ,CAAU,uBAAV,CAAN;AACD,OArLiB;AAuLlBqD,mBAAa,EAAE,UAAStB,QAAT,EAAmBpB,UAAnB,EAA+BC,OAA/B,EAAwC;AACrD,aAAKV,QAAL,GAAgB;AACdhF,kBAAQ,EAAE2C,MAAM,CAACkE,QAAD,CADF;AAEdpB,oBAAU,EAAEA,UAFE;AAGdC,iBAAO,EAAEA;AAHK,SAAhB;;AAMA,YAAI,KAAKzC,MAAL,KAAgB,MAApB,EAA4B;AAClC;AACA;AACQ,eAAKpB,GAAL,GAAWjC,WAAX;AACD;;AAED,eAAOwC,gBAAP;AACD;AArMiB,KAApB,CAjgBgC,CAysBlC;AACA;AACA;AACA;;AACE,WAAO9C,OAAP;AAED,GA/sBc,EAgtBf;AACA;AACA;AACA;AAC+B8I,QAAM,CAAC9I,OAptBvB,CAAf;;AAutBA,MAAI;AACF+I,sBAAkB,GAAGhJ,OAArB;AACD,GAFD,CAEE,OAAOiJ,oBAAP,EAA6B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,YAAQ,CAAC,GAAD,EAAM,wBAAN,CAAR,CAAwClJ,OAAxC;AACF;;AC3uBO,IAAMmJ,kBAAkB,GAAG,OAA3B;;ICKcC;;;;;SACnBC,uDAAsBC,MAAtB,EAAmDC,UAAnD;QACUC,cAA6BF,OAA7BE;QAAaC,cAAgBH,OAAhBG;;AACrB,yDAAmBF,UAAnB,wCAA+B;AAAA,UAApBG,IAAoB;;AAC7B,UAAIF,WAAW,IAAIC,WAAnB,EAAgC;AAC9B,eAAOE,aAAa,CAAC;AAAEH,qBAAW,EAAXA,WAAF;AAAeC,qBAAW,EAAXA,WAAf;AAA4BG,kBAAQ,EAAEF,IAAI,CAACG;AAA3C,SAAD,CAApB;AACD;AACF;;AACD,WAAOzE,OAAO,CAACX,OAARW,EAAP;AACD;;SACK0E;4FAAN,iBAA2BC,OAA3B,EAAyDC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,+CACS5E,OAAO,CAACX,OAARW,EADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;GAAM0E;;;CAVaV;;AAerB,IAAMO,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaH,WAAb,QAAaA,WAAb;AAAA,MAA0BD,WAA1B,QAA0BA,WAA1B;AAAA,SACpB,IAAIpE,OAAJ,CAAkB,UAACX,OAAD,EAAUC,MAAV;AAChB,QAAI8E,WAAJ,EAAiB;AACf,UAAMS,QAAQ,GAAGT,WAAW,GAAGL,kBAA/B;;AACA,UAAIS,QAAQ,GAAGK,QAAf,EAAyB;AACvBvF,cAAM,CAAC;AAAEwF,0BAAgB,EAAE;AAApB,SAAD,CAANxF;AACD;AACF;;AACD,QAAI+E,WAAJ,EAAiB;AACf,UAAMU,QAAQ,GAAGV,WAAW,GAAGN,kBAA/B;;AACA,UAAIS,QAAQ,GAAGO,QAAf,EAAyB;AACvBzF,cAAM,CAAC;AAAE0F,0BAAgB,EAAE;AAApB,SAAD,CAAN1F;AACD;AACF;;AACDD,WAAO;AAbT,IADoB;AAAtB;;ICjBqB4F;;;;;SACnBhB,uDAAsBC,MAAtB,EAAmDC,UAAnD;QACUe,mBAAqBhB,OAArBgB;;AACR,QAAIA,gBAAJ,EAAsB;AACpB,UAAIA,gBAAgB,CAACC,GAAjBD,IAAwBf,UAAU,CAACjC,MAAXiC,GAAoBe,gBAAgB,CAACC,GAAjE,EAAsE;AACpE,eAAOnF,OAAO,CAACV,MAARU,CAAe;AAAEoF,0BAAgB,EAAE;AAApB,SAAfpF,CAAP;AACD;;AAED,UAAIkF,gBAAgB,CAACG,GAAjBH,IAAwBf,UAAU,CAACjC,MAAXiC,GAAoBe,gBAAgB,CAACG,GAAjE,EAAsE;AACpE,eAAOrF,OAAO,CAACV,MAARU,CAAe;AAAEsF,4BAAkB,EAAE;AAAtB,SAAftF,CAAP;AACD;AACF;;AACD,WAAOA,OAAO,CAACX,OAARW,EAAP;AACD;;SACD0E;AACE,WAAO1E,OAAO,CAACX,OAARW,EAAP;AACD;;;CAhBkBiF;;SCHLM,eAAeC,QAAgBC,UAAmBC;AAChE;AACA;AAEA;AACA,MAAIC,YAAY,GAAGC,QAAQ,CAACC,aAATD,CAAuB,OAAvBA,CAAnB,CALgEF,CAKhE;;AAEAC,cAAY,CAACG,KAAbH,CAAmBI,OAAnBJ,GAA6B,MAA7BA;AACAC,UAAQ,CAACI,IAATJ,CAAcK,WAAdL,CAA0BD,YAA1BC,EARgEF,CAQhE;;AAEAC,cAAY,CAACtI,IAAbsI,GAAoB,MAApBA,CAVgED,CAUhE;AAEA;;AACAC,cAAY,CAACH,MAAbG,GAAsBH,MAAtBG,CAbgED,CAahE;;AAEAC,cAAY,CAACF,QAAbE,GAAwBF,QAAxBE,CAfgED,CAehE;AAEA;;AACAC,cAAY,CAACO,gBAAbP,CAA8B,QAA9BA,EAAwC,eAAG;AACzCD,YAAQ,CAACtI,GAAD,CAARsI,CADyC,CACzC;;AAEAE,YAAQ,CAACI,IAATJ,CAAcO,WAAdP,CAA0BD,YAA1BC;AAHF,KAlBgEF,CAkBhE;;AAMAC,cAAY,CAACS,aAAbT,CAA2B,IAAIU,UAAJ,CAAe,OAAf,CAA3BV;AACD;;ICrBoBW;;;;;SACnBrC;AACE,WAAOjE,OAAO,CAACX,OAARW,EAAP;AACD;;SACD0E,qDAAqBR,MAArB,EAAkDI,IAAlD,EAAsEiC,MAAtE;QACUC,SAAkCtC,OAAlCsC;QAAQC,wBAA0BvC,OAA1BuC;;AAChB,QAAID,MAAM,KAAK,SAAXA,IAAwBC,qBAAxBD,IAAiDE,OAAO,CAACpC,IAAI,CAACjH,IAAN,CAA5D,EAAyE;AACvE,aAAOsJ,oBAAoB,CAACJ,MAAM,CAAC/G,MAAR,EAA0BiH,qBAA1B,CAA3B;AACD;;AACD,WAAOzG,OAAO,CAACX,OAARW,EAAP;AACD;;;CAVkBsG;;AAarB,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACE,QAAD;AAAA,SAAsBA,QAAQ,CAACC,UAATD,CAAoB,OAApBA,CAAtB;AAAhB;;AAEA,IAAMD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACG,UAAD,EAAqBL,qBAArB;AAAA,SAC3B,IAAIzG,OAAJ,CAAkB,UAACX,OAAD,EAAUC,MAAV;AAChB,QAAMyH,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,OAAG,CAACE,MAAJF,GAAa;UACHG,YAA6CT,sBAA7CS;UAAWC,WAAkCV,sBAAlCU;UAAUC,YAAwBX,sBAAxBW;UAAWC,WAAaZ,sBAAbY;UAChCC,QAAmB,KAAnBA;UAAOC,SAAY,KAAZA;AACf,UAAIC,MAAM,GAAwB,EAAlC;AACA,UAAIN,SAAS,IAAIA,SAAS,GAAGK,MAA7B,EAAqCC,MAAM,gBAAQA,MAAR;AAAgBC,yBAAiB,EAAE;AAAnC,QAAND;AACrC,UAAIJ,SAAS,IAAIA,SAAS,GAAGG,MAA7B,EAAqCC,MAAM,gBAAQA,MAAR;AAAgBE,2BAAmB,EAAE;AAArC,QAANF;AACrC,UAAIL,QAAQ,IAAIA,QAAQ,GAAGG,KAA3B,EAAkCE,MAAM,gBAAQA,MAAR;AAAgBG,wBAAgB,EAAE;AAAlC,QAANH;AAClC,UAAIH,QAAQ,IAAIA,QAAQ,GAAGC,KAA3B,EAAkCE,MAAM,gBAAQA,MAAR;AAAgBI,0BAAkB,EAAE;AAApC,QAANJ;AAClCzM,YAAM,CAACgH,IAAPhH,CAAYyM,MAAZzM,EAAoBmH,MAApBnH,GAA6BuE,MAAM,CAACkI,MAAD,CAAnCzM,GAA8CsE,OAAO,EAArDtE;AARF;;AAUAgM,OAAG,CAACc,OAAJd,GAAc;AACZzH,YAAM,CAAC;AAAEwI,sBAAc,EAAE;AAAlB,OAAD,CAANxI;AADF;;AAGAyH,OAAG,CAACgB,GAAJhB,GAAUD,UAAVC;AAfF,IAD2B;AAA7B;;ACVA,IAAMiB,UAAU,GAAgB,cAAC,IAAIhE,iBAAJ,EAAD,eAA0B,IAAIiB,mBAAJ,EAA1B,eAAqD,IAAIqB,wBAAJ,EAArD,CAAhC;;AAEA,SAAS2B,aAAT;yBACEzC;MAAAA,kCAAS,GAATA,GAAS0C;2BACTzC;MAAAA,sCAAW,IAAXA,GAAW0C;yBACX3B;MAAAA,kCAAS,MAATA,GAAS4B;MACThE;MACAC;MACAoC;MACAvB;mCACAmD;MAAAA,sDAAmB,IAAnBA,GAAmBC;6BACnBC;MAAAA,0CAAa,EAAbA,GAAaC;;kBAEaC,QAAQ,CAAiB,EAAjB;MAA3BC;MAAOC;;mBAC0BF,QAAQ,CAAgB,EAAhB;MAAzCG;MAAcC;;mBACeJ,QAAQ,CAAc,EAAd;MAArCK;MAAYC;;mBACWN,QAAQ,CAAU,KAAV;MAA/BO;MAASC;;mBACoBR,QAAQ,CAAS,EAAT;MAArCtE;MAAY+E;;AACnB,MAAMC,mBAAmB,GAAGC,MAAM,CAAS,EAAT,CAAlC;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AACvB,QAAMC,cAAc,GAAG9D,MAAM,YAAY+D,KAAlB/D,GAA0BA,MAAM,CAACgE,IAAPhE,CAAY,GAAZA,CAA1BA,GAA6CA,MAApE;AACAD,kBAAc,CAAC+D,cAAD,EAAiB7D,QAAjB,EAA2B,eAAG;AAC1CgE,WAAK;AACL,UAAM9D,YAAY,GAAG+D,GAAG,CAACC,MAAzB;AACAR,yBAAmB,CAACS,OAApBT,GAA8BxD,YAAY,CAAC+C,KAAb/C,GAAqB4D,KAAK,CAACM,IAANN,CAAW5D,YAAY,CAAC+C,KAAxBa,CAArB5D,GAAsD,EAApFwD;AACA,UAAMW,WAAW,GAAG9B,UAAU,CAAC+B,MAAX/B,CAAkBO,UAAlBP,EAA8BgC,GAA9BhC,CAAkC,qBAAS;AAAA,eAC7DiC,SAAS,CACNhG,qBADHgG,CAEI;AACEzE,gBAAM,EAANA,MADF;AAEEC,kBAAQ,EAARA,QAFF;AAGEe,gBAAM,EAANA,MAHF;AAIEpC,qBAAW,EAAXA,WAJF;AAKEC,qBAAW,EAAXA,WALF;AAMEoC,+BAAqB,EAArBA,qBANF;AAOEvB,0BAAgB,EAAhBA,gBAPF;AAQEmD,0BAAgB,EAAhBA;AARF,SAFJ4B,EAYId,mBAAmB,CAACS,OAZxBK,WAcS,eAAG;AAAA,iBAAIjK,OAAO,CAACV,MAARU,CAAe+I,aAAa,CAAC,aAAC;AAAA,mBAAI,cAAM3M,GAAN,EAAc8N,CAAd,EAAJ;AAAF,YAA5BlK,CAAJ;AAdZ,UAD6D;AAA3C,QAApB;AAkBAA,aAAO,CAACmK,GAARnK,CAAY8J,WAAZ9J,EACGP,IADHO,CACQ;AACJ,YAAI,CAACqI,gBAAL,EAAuB;AACrBa,uBAAa,CAACC,mBAAmB,CAACS,OAArB,CAAbV;AACA;AACD;;AACDkB,iBAAS,CAACV,GAAD,CAATU,CAAe3K,IAAf2K,CAAoB,iBAAK;AACvBzB,kBAAQ,CAACD,KAAD,CAARC;AADF;AANJ,kBAUS,aAVT;AAtBY,MAAdpD;AAFF;;AAsCA,MAAMkE,KAAK,GAAG,SAARA,KAAQ;AACZP,iBAAa,CAAC,EAAD,CAAbA;AACAP,YAAQ,CAAC,EAAD,CAARA;AACAE,mBAAe,CAAC,EAAD,CAAfA;AACAE,iBAAa,CAAC,EAAD,CAAbA;AAJF;;AAOAsB,WAAS,CAAC;AACR,QAAI3B,KAAK,CAACxG,MAANwG,KAAiB,CAArB,EAAwB;AACtBG,qBAAe,CAAC,EAAD,CAAfA;AACA;AACD;;AACDI,cAAU,CAAC,IAAD,CAAVA;AACA,QAAMqB,mBAAmB,GAAG5B,KAAK,CAACsB,GAANtB,CAC1B,UAACpE,IAAD;AAAA,aACE,IAAItE,OAAJ;AAAA,mEAAY,kBAAOX,OAAP,EAAoDC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AACJiH,wBADI,GACK,IAAIgE,UAAJ,EAAThE,CADI;;AAIJiE,8BAJI,GAIWjE,MAAM,YAAUC,MAAV,CAArBgE;AACNA,8BAAY,CAAClN,IAAbkN,CAAkBjE,MAAlBiE,EAA0BlG,IAA1BkG;;AAEMC,0BAPI,GAOO,SAAXA,QAAW;2CAAG7L;wBAAAA,+BAAO0F,IAAI,CAAC1F,IAAZA,GAAYA;wBAAS8L;;AACvCpL,0BAAM;AAAGV,0BAAI,EAAJA,IAAH;AAASoG,sCAAgB,EAAE,KAA3B;AAAkCF,sCAAgB,EAAE;AAApD,uBAA8D4F,MAA9D,EAANpL;AARQ,mBAOJmL;;AAINlE,wBAAM,CAACU,MAAPV,+DAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRuD,uCADQ,GACM9B,UAAU,CAAC+B,MAAX/B,CAAkBO,UAAlBP,EAA8BgC,GAA9BhC,CAAkC,qBAAS;AAAA,qCAC7DiC,SAAS,CACNvF,oBADHuF,CAEI;AACEzE,sCAAM,EAANA,MADF;AAEEC,wCAAQ,EAARA,QAFF;AAGEe,sCAAM,EAANA,MAHF;AAIEpC,2CAAW,EAAXA,WAJF;AAKEC,2CAAW,EAAXA,WALF;AAMEoC,qDAAqB,EAArBA,qBANF;AAOEvB,gDAAgB,EAAhBA,gBAPF;AAQEmD,gDAAgB,EAAhBA;AARF,+BAFJ4B,EAYI3F,IAZJ2F,EAaI1D,MAbJ0D,WAeS,eAAG;AAAA,uCAAIjK,OAAO,CAACV,MAARU,CAAeyK,QAAQ,CAACrO,GAAD,CAAvB4D,CAAJ;AAfZ,gCAD6D;AAA3C,8BAAd8J;AAmBN9J,mCAAO,CAACmK,GAARnK,CAAY8J,WAAZ9J,EACGP,IADHO,CACQ;AAAA,qCACJX,OAAO,CAAC;AACNsL,uCAAO,EAAEpE,MAAM,CAAC/G,MADV;AAENZ,oCAAI,EAAE0F,IAAI,CAAC1F,IAFL;AAGNgM,4CAAY,EAAEtG,IAAI,CAACsG;AAHb,+BAAD,CADH;AADR,wCAQS,aART;;AApBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;;AA+BArE,wBAAM,CAACsB,OAAPtB,GAAiB;AACfkE,4BAAQ,CAAC;AAAEI,iCAAW,EAAEtE,MAAM,CAAC5G;AAAtB,qBAAD,CAAR8K;AADF;;AA1CU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;;AAAA;AAAA;AAAA;AAAA,UADF;AAD0B,MAA5B;AAiDAzK,WAAO,CAACmK,GAARnK,CAAYsK,mBAAZtK,EACGP,IADHO,CACQ,UAAC8K,WAAD;AACJjC,qBAAe,CAACiC,WAAD,CAAfjC;AACAK,mBAAa,CAACC,mBAAmB,CAACS,OAArB,CAAbV;AACAH,mBAAa,CAAC,EAAD,CAAbA;AAJJ,gBAMS,eAAG;AACRA,mBAAa,CAAC,aAAC;AAAA,gBAAK3M,GAAL,SAAa8N,CAAb;AAAF,QAAbnB;AAPJ,kBASW;AAAA,aAAME,UAAU,CAAC,KAAD,CAAhB;AATX,OAvDQ,CAuDR;AAvDO,KAkEN,CAACP,KAAD,CAlEM,CAAT2B;AAoEA,SAAO,CAAChB,gBAAD,EAAmB;AAAET,gBAAY,EAAZA,YAAF;AAAgBpB,UAAM,EAAEsB,UAAxB;AAAoCE,WAAO,EAAPA,OAApC;AAA6C7E,cAAU,EAAVA,UAA7C;AAAyDsF,SAAK,EAALA;AAAzD,GAAnB,CAAP;AACD","names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","BYTES_PER_MEGABYTE","FileSizeValidator","validateBeforeParsing","config","plainFiles","minFileSize","maxFileSize","file","checkFileSize","fileSize","size","validateAfterParsing","_config","_file","minBytes","fileSizeTooSmall","maxBytes","fileSizeToolarge","FilesLimitValidator","limitFilesConfig","max","maxLimitExceeded","min","minLimitNotReached","openFileDialog","accept","multiple","callback","inputElement","document","createElement","style","display","body","appendChild","addEventListener","removeChild","dispatchEvent","MouseEvent","ImageDimensionsValidator","reader","readAs","imageSizeRestrictions","isImage","checkImageDimensions","fileType","startsWith","imgDataURL","img","Image","onload","maxHeight","maxWidth","minHeight","minWidth","width","height","errors","imageHeightTooBig","imageHeightTooSmall","imageWidthTooBig","imageWidthTooSmall","onerror","imageNotLoaded","src","VALIDATORS","useFilePicker","_ref$accept","_ref$multiple","_ref$readAs","readFilesContent","_ref$readFilesContent","validators","_ref$validators","useState","files","setFiles","filesContent","setFilesContent","fileErrors","setFileErrors","loading","setLoading","setPlainFiles","plainFileObjectsRef","useRef","openFileSelector","fileExtensions","Array","join","clear","evt","target","current","from","validations","concat","map","validator","f","all","fromEvent","useEffect","fileParsingPromises","FileReader","readStrategy","addError","others","content","lastModified","readerError","fileContent"],"sources":["C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\node_modules\\regenerator-runtime\\runtime.js","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\constants\\bytesPerMegabyte.ts","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\validators\\fileSizeValidator\\index.ts","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\validators\\filesLimitValidator\\index.ts","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\helpers\\openFileDialog.ts","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\validators\\imageDimensionsValidator\\index.ts","C:\\Users\\Alceu Caterca\\react_projects\\ecommerce\\youtube2\\admin\\node_modules\\use-file-picker\\src\\useFilePicker.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const BYTES_PER_MEGABYTE = 1000000;\n","import { FileWithPath } from 'file-selector';\nimport { BYTES_PER_MEGABYTE } from '../../constants/bytesPerMegabyte';\nimport { UseFilePickerConfig } from '../../interfaces';\nimport { Validator } from '../validatorInterface';\n\nexport default class FileSizeValidator implements Validator {\n  validateBeforeParsing(config: UseFilePickerConfig, plainFiles: File[]): Promise<void> {\n    const { minFileSize, maxFileSize } = config;\n    for (const file of plainFiles) {\n      if (minFileSize || maxFileSize) {\n        return checkFileSize({ minFileSize, maxFileSize, fileSize: file.size });\n      }\n    }\n    return Promise.resolve();\n  }\n  async validateAfterParsing(_config: UseFilePickerConfig, _file: FileWithPath): Promise<void> {\n    return Promise.resolve();\n  }\n}\n\nconst checkFileSize = ({ fileSize, maxFileSize, minFileSize }: { minFileSize: number | undefined; maxFileSize: number | undefined; fileSize: number }) =>\n  new Promise<void>((resolve, reject) => {\n    if (minFileSize) {\n      const minBytes = minFileSize * BYTES_PER_MEGABYTE;\n      if (fileSize < minBytes) {\n        reject({ fileSizeTooSmall: true });\n      }\n    }\n    if (maxFileSize) {\n      const maxBytes = maxFileSize * BYTES_PER_MEGABYTE;\n      if (fileSize > maxBytes) {\n        reject({ fileSizeToolarge: true });\n      }\n    }\n    resolve();\n  });\n","import { UseFilePickerConfig } from '../../interfaces';\nimport { Validator } from '../validatorInterface';\n\nexport default class FilesLimitValidator implements Validator {\n  validateBeforeParsing(config: UseFilePickerConfig, plainFiles: File[]): Promise<void> {\n    const { limitFilesConfig } = config;\n    if (limitFilesConfig) {\n      if (limitFilesConfig.max && plainFiles.length > limitFilesConfig.max) {\n        return Promise.reject({ maxLimitExceeded: true });\n      }\n\n      if (limitFilesConfig.min && plainFiles.length < limitFilesConfig.min) {\n        return Promise.reject({ minLimitNotReached: true });\n      }\n    }\n    return Promise.resolve();\n  }\n  validateAfterParsing(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","export function openFileDialog(accept: string, multiple: boolean, callback: (arg: Event) => void) {\n  // this function must be called from a user\n  // activation event (ie an onclick event)\n\n  // Create an input element\n  var inputElement = document.createElement('input');\n  // Hide element and append to body (required to run on iOS safari)\n  inputElement.style.display = 'none';\n  document.body.appendChild(inputElement);\n  // Set its type to file\n  inputElement.type = 'file';\n  // Set accept to the file types you want the user to select.\n  // Include both the file extension and the mime type\n  inputElement.accept = accept;\n  // Accept multiple files\n  inputElement.multiple = multiple;\n  // set onchange event to call callback when user has selected file\n  //inputElement.addEventListener('change', callback);\n  inputElement.addEventListener('change', arg => {\n    callback(arg);\n    // remove element\n    document.body.removeChild(inputElement);\n  });\n  // dispatch a click event to open the file dialog\n  inputElement.dispatchEvent(new MouseEvent('click'));\n}\n","import { FileWithPath } from 'file-selector';\nimport { ImageDimensionError, ImageDims, UseFilePickerConfig } from '../../interfaces';\nimport { Validator } from '../validatorInterface';\n\nexport default class ImageDimensionsValidator implements Validator {\n  validateBeforeParsing(): Promise<void> {\n    return Promise.resolve();\n  }\n  validateAfterParsing(config: UseFilePickerConfig, file: FileWithPath, reader: FileReader): Promise<void> {\n    const { readAs, imageSizeRestrictions } = config;\n    if (readAs === 'DataURL' && imageSizeRestrictions && isImage(file.type)) {\n      return checkImageDimensions(reader.result as string, imageSizeRestrictions);\n    }\n    return Promise.resolve();\n  }\n}\n\nconst isImage = (fileType: string) => fileType.startsWith('image');\n\nconst checkImageDimensions = (imgDataURL: string, imageSizeRestrictions: ImageDims) =>\n  new Promise<void>((resolve, reject) => {\n    const img = new Image();\n    img.onload = function() {\n      const { maxHeight, maxWidth, minHeight, minWidth } = imageSizeRestrictions;\n      const { width, height } = (this as unknown) as typeof img;\n      let errors: ImageDimensionError = {};\n      if (maxHeight && maxHeight < height) errors = { ...errors, imageHeightTooBig: true };\n      if (minHeight && minHeight > height) errors = { ...errors, imageHeightTooSmall: true };\n      if (maxWidth && maxWidth < width) errors = { ...errors, imageWidthTooBig: true };\n      if (minWidth && minWidth > width) errors = { ...errors, imageWidthTooSmall: true };\n      Object.keys(errors).length ? reject(errors) : resolve();\n    };\n    img.onerror = function() {\n      reject({ imageNotLoaded: true } as ImageDimensionError);\n    };\n    img.src = imgDataURL;\n  });\n","import { useEffect, useRef, useState } from 'react';\nimport { fromEvent, FileWithPath } from 'file-selector';\nimport { UseFilePickerConfig, FileContent, FilePickerReturnTypes, FileError, ReaderMethod } from './interfaces';\nimport FileSizeValidator from './validators/fileSizeValidator';\nimport FilesLimitValidator from './validators/filesLimitValidator';\nimport { Validator } from './validators/validatorInterface';\nimport { openFileDialog } from './helpers/openFileDialog';\nimport ImageDimensionsValidator from './validators/imageDimensionsValidator';\n\nconst VALIDATORS: Validator[] = [new FileSizeValidator(), new FilesLimitValidator(), new ImageDimensionsValidator()];\n\nfunction useFilePicker({\n  accept = '*',\n  multiple = true,\n  readAs = 'Text',\n  minFileSize,\n  maxFileSize,\n  imageSizeRestrictions,\n  limitFilesConfig,\n  readFilesContent = true,\n  validators = [],\n}: UseFilePickerConfig): FilePickerReturnTypes {\n  const [files, setFiles] = useState<FileWithPath[]>([]);\n  const [filesContent, setFilesContent] = useState<FileContent[]>([]);\n  const [fileErrors, setFileErrors] = useState<FileError[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [plainFiles, setPlainFiles] = useState<File[]>([]);\n  const plainFileObjectsRef = useRef<File[]>([]);\n\n  const openFileSelector = () => {\n    const fileExtensions = accept instanceof Array ? accept.join(',') : accept;\n    openFileDialog(fileExtensions, multiple, evt => {\n      clear();\n      const inputElement = evt.target as HTMLInputElement;\n      plainFileObjectsRef.current = inputElement.files ? Array.from(inputElement.files) : [];\n      const validations = VALIDATORS.concat(validators).map(validator =>\n        validator\n          .validateBeforeParsing(\n            {\n              accept,\n              multiple,\n              readAs,\n              minFileSize,\n              maxFileSize,\n              imageSizeRestrictions,\n              limitFilesConfig,\n              readFilesContent,\n            },\n            plainFileObjectsRef.current\n          )\n          .catch(err => Promise.reject(setFileErrors(f => [{ ...err, ...f }])))\n      );\n\n      Promise.all(validations)\n        .then(() => {\n          if (!readFilesContent) {\n            setPlainFiles(plainFileObjectsRef.current);\n            return;\n          }\n          fromEvent(evt).then(files => {\n            setFiles(files as FileWithPath[]);\n          });\n        })\n        .catch(() => {});\n    });\n  };\n\n  const clear = (): void => {\n    setPlainFiles([]);\n    setFiles([]);\n    setFilesContent([]);\n    setFileErrors([]);\n  };\n\n  useEffect(() => {\n    if (files.length === 0) {\n      setFilesContent([]);\n      return;\n    }\n    setLoading(true);\n    const fileParsingPromises = files.map(\n      (file: FileWithPath) =>\n        new Promise(async (resolve: (fileContent: FileContent) => void, reject: (reason: FileError) => void) => {\n          const reader = new FileReader();\n\n          //availible reader methods: readAsText, readAsBinaryString, readAsArrayBuffer, readAsDataURL\n          const readStrategy = reader[`readAs${readAs}` as ReaderMethod] as typeof reader.readAsText;\n          readStrategy.call(reader, file);\n\n          const addError = ({ name = file.name, ...others }: FileError) => {\n            reject({ name, fileSizeToolarge: false, fileSizeTooSmall: false, ...others });\n          };\n\n          reader.onload = async () => {\n            const validations = VALIDATORS.concat(validators).map(validator =>\n              validator\n                .validateAfterParsing(\n                  {\n                    accept,\n                    multiple,\n                    readAs,\n                    minFileSize,\n                    maxFileSize,\n                    imageSizeRestrictions,\n                    limitFilesConfig,\n                    readFilesContent,\n                  },\n                  file,\n                  reader\n                )\n                .catch(err => Promise.reject(addError(err)))\n            );\n\n            Promise.all(validations)\n              .then(() =>\n                resolve({\n                  content: reader.result as string,\n                  name: file.name,\n                  lastModified: file.lastModified,\n                } as FileContent)\n              )\n              .catch(() => {});\n          };\n\n          reader.onerror = () => {\n            addError({ readerError: reader.error });\n          };\n        })\n    );\n    Promise.all(fileParsingPromises)\n      .then((fileContent: FileContent[]) => {\n        setFilesContent(fileContent);\n        setPlainFiles(plainFileObjectsRef.current);\n        setFileErrors([]);\n      })\n      .catch(err => {\n        setFileErrors(f => [err, ...f]);\n      })\n      .finally(() => setLoading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n\n  return [openFileSelector, { filesContent, errors: fileErrors, loading, plainFiles, clear }];\n}\n\nexport default useFilePicker;\n"]},"metadata":{},"sourceType":"module"}